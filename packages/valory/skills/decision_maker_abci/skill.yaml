name: decision_maker_abci
author: valory
version: 0.1.0
type: skill
description: This skill is responsible for the decision making and placing the bets.
  It samples a market based on its liquidity, it sends a request to a mech to decide
  what to vote for, it receives the response from the mech, it decides whether voting
  is profitable or not, and ultimately, it either bets or blacklists the market.
license: Apache-2.0
aea_version: '>=1.0.0, <2.0.0'
fingerprint:
  README.md: bafybeia367zzdwndvlhw27rvnwodytjo3ms7gbc3q7mhrrjqjgfasnk47i
  __init__.py: bafybeih563ujnigeci2ldzh7hakbau6a222vsed7leg3b7lq32vcn3nm4a
  behaviours/__init__.py: bafybeih6ddz2ocvm6x6ytvlbcz6oi4snb5ee5xh5h65nq4w2qf7fd7zfky
  behaviours/base.py: bafybeialr3zhwjenpwp6tu74olnzghtzmuofymidhwekkvhe7uskwczrii
  behaviours/bet_placement.py: bafybeigtz4uimsqjjwq4r5p3a5v6niqdtqezbuf2ghy6o7syhsh4k5gjfa
  behaviours/blacklisting.py: bafybeierwdzn6vav54l6zym77hhx2vdx3jtnnwpbhwmwwyrqzncwjwkxu4
  behaviours/decision_receive.py: bafybeidvae35fzdmf2hvn3lqkc67zgjy5enu3vi3z5duomlqmf2v4zvxza
  behaviours/decision_request.py: bafybeidhmhjxt5xjhznxchqqqh6ohdssyyyzuqxv6dfdvpza7c2bxigajq
  behaviours/handle_failed_tx.py: bafybeidxpc6u575ymct5tdwutvzov6zqfdoio5irgldn3fw7q3lg36mmxm
  behaviours/reedem.py: bafybeibenzbek5qdtk3gobjxfmsm6tg6i3d4yltozymy23izpgbcpal5ye
  behaviours/round_behaviour.py: bafybeig4tdktyu6hapoqymnxh2bgpds547st6a44heue657wkctwe4gjvm
  behaviours/sampling.py: bafybeifzhm4sspdvt227ksl5hjn26offgqpwempgbcwbr6dq7gyi2a46sm
  behaviours/tool_selection.py: bafybeifpvrrbftlkjsoiysnasihzttousk6hxnukzrln6z2d33e3zexkje
  dialogues.py: bafybeigpwuzku3we7axmxeamg7vn656maww6emuztau5pg3ebsoquyfdqm
  fsm_specification.yaml: bafybeidqrxj3l3e555znk4wxx6spwaijz3bhc5yialhzbhd6ngk52w7jbq
  handlers.py: bafybeiggoetspwcvdojmbjdd67tmkoeedikmt6vsbcium3zjaljb6jzqu4
  io_/__init__.py: bafybeifxgmmwjqzezzn3e6keh2bfo4cyo7y5dq2ept3stfmgglbrzfl5rq
  io_/loader.py: bafybeih3sdsx5dhe4kzhtoafexjgkutsujwqy3zcdrlrkhtdks45bc7exa
  models.py: bafybeif63pruksc6fpvmg77jmsrphc36uiawypzzcrk6nbpzoglbpxnlfy
  payloads.py: bafybeigcic4vewdglakzpyqevhfwsolh4ywnbvxo5bgned7gl5uo3jif7m
  policy.py: bafybeidpmx4ek3qze63zpuwixyf6t7bdv62ewgkzt3ljrzadiwdw64cueq
  redeem_info.py: bafybeifiiix4gihfo4avraxt34sfw35v6dqq45do2drrssei2shbps63mm
  rounds.py: bafybeifvov25vwzbbzgg4zvtptsnqve7t7hbjq3b7wuhie4fdwq2e7th7q
  states/__init__.py: bafybeid23llnyp6j257dluxmrnztugo5llsrog7kua53hllyktz4dqhqoy
  states/base.py: bafybeibhcc4pc3m6qelvdvxssnuglcwfaff55cr2kule74ekauyf3bahpq
  states/bet_placement.py: bafybeibalhxhp2c4oljmiwqi6ds3g36fgtabmf42mb5sgq6z22znrcbhda
  states/blacklisting.py: bafybeifruvxwwltndwazkzzbpc5nnnad3z5t5ofy6d3i7nssljbxl6gvxu
  states/decision_receive.py: bafybeib3roo27nccj4eylaqwwzztzzzwsi6px5atjrch5wbqmpln2kyy6y
  states/decision_request.py: bafybeic7otc3hjb753svbmur3yyk6szahc25yii3x4w4vcnpfz6jwvacuu
  states/final_states.py: bafybeidiwhuyd5zm2cq7vhv2owcrxdpm7fnvn3db6p6tql4jz5hgpalflu
  states/handle_failed_tx.py: bafybeihewm2vernvhktuorljdupjqcg2p5vs6wvsira2d62wkoyo5xlzjm
  states/redeem.py: bafybeiblidmpt73ocac73wmakusrnf5267vs7s2foc5pqkrz4vuqgy3b4u
  states/sampling.py: bafybeidnvdogjlthjfe7jpaiuezm3xydrbxxukyoss4gx6t5fdin52rsta
  states/tool_selection.py: bafybeiaaijv6dukp3bmsptcwkcmumc6wu6ztzkvaqzsqqjbfn4ozgyuykq
  tests/__init__.py: bafybeiakpi3k3kc7wrjj7hrluvjcj36lu2gezpmrctwiz5yg2fe7ggnf3i
  tests/behaviours/__init__.py: bafybeic7icz7lfhfepdkqkase7y7zn3a6pwdw6fx4ah2hajmgejawpolc4
  tests/behaviours/test_base.py: bafybeidemmwjhtr6i4tq66jyqkpmb425ersfmk7k7zzjmeaz2idqnpcwve
  tests/conftest.py: bafybeidy5hw56kw5mxudnfbhvogofn6k4rqb4ux2bd45baedrrhmgyrude
fingerprint_ignore_patterns: []
connections: []
contracts:
- valory/gnosis_safe:0.1.0:bafybeiegkl6zrbvlbpwmoziw4hfkocjfqdqphkmpgow7ovsmv7bwa3f4pe
- valory/market_maker:0.1.0:bafybeiain372i5t6eteem36vzhwh6ppka6hc4oyrxjtyzuar6rd6bjocem
- valory/erc20:0.1.0:bafybeiad6qbyhr3sgvclqne7tvyvqt32pcj5aq47hhkd2vmawaflhy5vna
- valory/multisend:0.1.0:bafybeig5byt5urg2d2bsecufxe5ql7f4mezg3mekfleeh32nmuusx66p4y
- valory/mech:0.1.0:bafybeiauxqogu726oeethvzux6r77zgn7sw5j2l4uigqb47zlqawblkv6e
- valory/conditional_tokens:0.1.0:bafybeigucumqbsk74nj4rpm4p2cpiky4dj6uws7nfmgpimuviaxcamwqnu
- valory/realitio:0.1.0:bafybeic5ie4oodetj4krdogydvbfxg4qggc3matpiflocah626tpevpreq
- valory/realitio_proxy:0.1.0:bafybeidx37xzjjmapwacedgzhum6grfzhp5vhouz4zu3pvpgdy5pgb2fr4
- valory/agent_registry:0.1.0:bafybeia64nagvpw3rcxa7datevxhc57klbpaai5ntkthfjqdldxic3ywai
protocols:
- valory/contract_api:1.0.0:bafybeialhbjvwiwcnqq3ysxcyemobcbie7xza66gaofcvla5njezkvhcka
- valory/ledger_api:1.0.0:bafybeige5agrztgzfevyglf7mb4o7pzfttmq4f6zi765y4g2zvftbyowru
- valory/ipfs:0.1.0:bafybeiedxeismnx3k5ty4mvvhlqideixlhqmi5mtcki4lxqfa7uqh7p33u
skills:
- valory/abstract_round_abci:0.1.0:bafybeicrzndcdbue34yxwwb4hmmdhgzw4owcdcdag3ifj6thpx5wie3dp4
- valory/market_manager_abci:0.1.0:bafybeify5v5pdhu5kikkcxtqejent6kzx3b2acmqk53nudvsntlmk3av2y
- valory/transaction_settlement_abci:0.1.0:bafybeifpnkwgwpzz6uwrvfgurm26allr6shjfbp7bfbrxwy64sw3nf3fsa
behaviours:
  main:
    args: {}
    class_name: AgentDecisionMakerRoundBehaviour
handlers:
  abci:
    args: {}
    class_name: ABCIHandler
  contract_api:
    args: {}
    class_name: ContractApiHandler
  http:
    args: {}
    class_name: HttpHandler
  ipfs:
    args: {}
    class_name: IpfsHandler
  ledger_api:
    args: {}
    class_name: LedgerApiHandler
  signing:
    args: {}
    class_name: SigningHandler
  tendermint:
    args: {}
    class_name: TendermintHandler
models:
  abci_dialogues:
    args: {}
    class_name: AbciDialogues
  benchmark_tool:
    args:
      log_dir: /logs
    class_name: BenchmarkTool
  contract_api_dialogues:
    args: {}
    class_name: ContractApiDialogues
  http_dialogues:
    args: {}
    class_name: HttpDialogues
  ipfs_dialogues:
    args: {}
    class_name: IpfsDialogues
  ledger_api_dialogues:
    args: {}
    class_name: LedgerApiDialogues
  params:
    args:
      cleanup_history_depth: 1
      cleanup_history_depth_current: null
      drand_public_key: 868f005eb8e6e4ca0a47c8a77ceaa5309a47978a7c71bc5cce96366b5d7a569937c529eeda66c7293784a9402801af31
      genesis_config:
        genesis_time: '2022-05-20T16:00:21.735122717Z'
        chain_id: chain-c4daS1
        consensus_params:
          block:
            max_bytes: '22020096'
            max_gas: '-1'
            time_iota_ms: '1000'
          evidence:
            max_age_num_blocks: '100000'
            max_age_duration: '172800000000000'
            max_bytes: '1048576'
          validator:
            pub_key_types:
            - ed25519
          version: {}
        voting_power: '10'
      keeper_timeout: 30.0
      max_attempts: 10
      max_healthcheck: 120
      on_chain_service_id: null
      request_retry_delay: 1.0
      request_timeout: 10.0
      reset_pause_duration: 10
      reset_tendermint_after: 2
      retry_attempts: 400
      retry_timeout: 3
      round_timeout_seconds: 350.0
      service_id: decision_maker
      service_registry_address: null
      agent_registry_address: null
      setup:
        all_participants:
        - '0x0000000000000000000000000000000000000000'
        safe_contract_address: '0x0000000000000000000000000000000000000000'
        consensus_threshold: null
      share_tm_config_on_startup: false
      sleep_time: 1
      use_slashing: false
      slash_cooldown_hours: 3
      slash_threshold_amount: 10000000000000000
      light_slash_unit_amount: 5000000000000000
      serious_slash_unit_amount: 8000000000000000
      tendermint_check_sleep_delay: 3
      tendermint_com_url: http://localhost:8080
      tendermint_max_retries: 5
      tendermint_p2p_url: localhost:26656
      tendermint_url: http://localhost:26657
      tx_timeout: 10.0
      use_termination: false
      mech_agent_address: '0xff82123dfb52ab75c417195c5fdb87630145ae81'
      sample_bets_closing_days: 10
      trading_strategy: strategy_name
      use_fallback_strategy: true
      bet_threshold: 100000000000000000
      blacklisting_duration: 3600
      ipfs_address: https://gateway.autonolas.tech/ipfs/
      prompt_template: With the given question "@{question}" and the `yes` option
        represented by `@{yes}` and the `no` option represented by `@{no}`, what are
        the respective probabilities of `p_yes` and `p_no` occurring?
      dust_threshold: 10000000000000
      conditional_tokens_address: '0xCeAfDD6bc0bEF976fdCd1112955828E00543c0Ce'
      realitio_proxy_address: '0xAB16D643bA051C11962DA645f74632d3130c81E2'
      realitio_address: '0x79e32aE03fb27B07C89c0c568F80287C01ca2E57'
      redeem_round_timeout: 3600.0
      event_filtering_batch_size: 5000
      reduce_factor: 0.25
      max_filtering_retries: 6
      minimum_batch_size: 500
      redeeming_batch_size: 5
      policy_store_path: /data/
      slippage: 0.01
      policy_epsilon: 0.1
      use_subgraph_for_redeeming: true
      irrelevant_tools:
      - openai-text-davinci-002
      - openai-text-davinci-003
      - openai-gpt-3.5-turbo
      - openai-gpt-4
      - stabilityai-stable-diffusion-v1-5
      - stabilityai-stable-diffusion-xl-beta-v2-2-2
      - stabilityai-stable-diffusion-512-v2-1
      - stabilityai-stable-diffusion-768-v2-1
      tool_punishment_multiplier: 1
      contract_timeout: 300.0
      file_hash_to_strategies_json:
      - - hash
        - - strategy_name
      strategies_kwargs:
      - - bet_kelly_fraction
        - 1.0
      - - floor_balance
        - 500000000000000000
      - - bet_amount_per_threshold
        - 0.0: 0
          0.1: 0
          0.2: 0
          0.3: 0
          0.4: 0
          0.5: 0
          0.6: 0
          0.7: 0
          0.8: 0
          0.9: 0
          1.0: 0
    class_name: DecisionMakerParams
  mech_response:
    args:
      api_id: mech_response
      headers:
        Content-Type: application/json
      method: GET
      parameters: {}
      response_key: null
      response_type: dict
      retries: 5
      url: ''
    class_name: MechResponseSpecs
  trades_subgraph:
    args:
      api_id: trades
      headers:
        Content-Type: application/json
      method: POST
      parameters: {}
      response_key: data:fpmmTrades
      response_type: list
      retries: 5
      url: https://api.thegraph.com/subgraphs/name/protofire/omen-xdai
    class_name: TradesSubgraph
  conditional_tokens_subgraph:
    args:
      api_id: conditional_tokens
      headers:
        Content-Type: application/json
      method: POST
      parameters: {}
      response_key: data:user:userPositions
      response_type: list
      retries: 5
      url: https://api.thegraph.com/subgraphs/name/gnosis/conditional-tokens-gc
    class_name: ConditionalTokensSubgraph
  realitio_subgraph:
    args:
      api_id: realitio
      headers:
        Content-Type: application/json
      method: POST
      parameters: {}
      response_key: data:answers
      response_type: list
      retries: 5
      url: https://api.thegraph.com/subgraphs/name/realityeth/realityeth-gnosis
    class_name: RealitioSubgraph
  agent_tools:
    args:
      api_id: agent_tools
      headers:
        Content-Type: application/json
      method: GET
      parameters: {}
      response_key: tools
      response_type: list
      retries: 5
      url: ''
    class_name: AgentToolsSpecs
  requests:
    args: {}
    class_name: Requests
  signing_dialogues:
    args: {}
    class_name: SigningDialogues
  state:
    args: {}
    class_name: SharedState
  tendermint_dialogues:
    args: {}
    class_name: TendermintDialogues
dependencies:
  hexbytes:
    version: ==0.3.1
  hypothesis:
    version: ==6.21.6
  py-multibase:
    version: ==1.0.3
  py-multicodec:
    version: ==0.2.1
  web3:
    version: <7,>=6.0.0
  pyyaml:
    version: <=6.0.1,>=3.10
is_abstract: true
